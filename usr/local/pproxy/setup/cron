# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
*/15 * * * * /usr/bin/python3 /usr/local/pproxy/periodic/send_heartbeat.py >/dev/null 2>&1 
*/15 * * * * /bin/bash /usr/local/pproxy/periodic/cron-upnp.sh >/dev/null 2>&1
# UX development: regularly sync with ux-development branch of the git
15 */4 * * *  /bin/bash /var/local/pproxy/git/sync.sh
@weekly sudo /usr/local/sbin/update-pproxy.sh >/dev/null 2>&1
#daily while rollout in progress
@daily sudo /usr/local/sbin/update-pproxy.sh >/dev/null 2>&1
@hourly sudo /usr/local/sbin/update-pproxy.sh >/dev/null 2>&1
@monthly sudo /usr/local/sbin/update-system.sh >/dev/null 2>&1
